version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: school           # Name of your database
      POSTGRES_USER: postgres        # Username
      POSTGRES_PASSWORD: yourpassword # Change this to a secure password
    ports:
      - "5432:5432"                  # Expose PostgreSQL on port 5432
    volumes:
      - ./db/data/postgresql:/var/lib/postgresql/data # Persist PostgreSQL data
      - ./db/sql:/docker-entrypoint-initdb.d # Mount sql directory
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend             # Path to your backend Dockerfile
      dockerfile: Dockerfile          # Specify the Dockerfile name
    container_name: spring_backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/school
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: yourpassword # Must match the DB password
    ports:
      - "8080:8080"                  # Expose backend on port 8080
    depends_on:
      db:
        condition: service_healthy    # Wait until db is healthy

  frontend:
    build:
      context: ./frontend            # Path to your frontend Dockerfile
      dockerfile: Dockerfile          # Specify the Dockerfile name
    container_name: frontend_app
    ports:
      - "3000:3000"                  # Expose frontend on port 3000
    depends_on:
      - backend                       # Wait for the backend service to start

volumes:
  pg_data:                           # Named volume for PostgreSQL data
